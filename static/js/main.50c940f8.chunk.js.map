{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","picture","large","name","first","email","CardList","users","map","login","uuid","SearchBox","placeholder","handleChange","type","onChange","App","state","userList","searchField","fetch","then","response","json","setState","results","this","filteredUsers","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,eAAeC,IAAKH,EAAMI,KAAKC,QAAQC,QAChD,6BAAKN,EAAMI,KAAKG,KAAKC,QACrB,4BAAIR,EAAMI,KAAKK,YCHVC,G,MAAW,SAAAV,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMW,MAAMC,KAAI,SAAAR,GAAI,OACjB,cAAC,EAAD,CAA4BA,KAAMA,GAAvBA,EAAKS,MAAMC,aCJrBC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAhB,UAAU,SACViB,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC6BAG,E,kDA9Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,GACVC,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,yCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAd,GAAK,OAAI,EAAKiB,SAAS,CAAEN,SAAUX,EAAMkB,e,oBAGjD,WAAU,IAAD,OACP,EAAkCC,KAAKT,MAA/BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YACZQ,EAAgBT,EAASU,QAAO,SAAA5B,GAAI,OACtCA,EAAKG,KAAKC,MAAMyB,cAAcC,SAASX,EAAYU,kBAGvD,OACE,sBAAKhC,UAAU,MAAf,UACA,2CACE,cAAC,EAAD,CAAWe,YAAY,eAAeC,aAAc,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAAEL,YAAaY,EAAEC,OAAOC,WAC/F,cAAC,EAAD,CAAU1B,MAAOoB,W,GA1BPO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.50c940f8.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"user-profile\" src={props.user.picture.large} />\n        <h2>{props.user.name.first}</h2>\n        <p>{props.user.email}</p>\n    </div>\n);\n","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.users.map(user => (\n            <Card key={user.login.uuid} user={user} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n    className='search'\n    type='search'\n    placeholder={ placeholder }\n    onChange={ handleChange }\n    />\n);\n","import './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      userList: [],\n      searchField: ''\n    };\n  }\n  \n  componentDidMount() {\n    fetch('https://randomuser.me/api/?results=50')\n    .then(response => response.json())\n    .then(users => this.setState({ userList: users.results }));\n  }\n\n  render() {\n    const { userList, searchField } = this.state;\n    const filteredUsers = userList.filter(user => (\n        user.name.first.toLowerCase().includes(searchField.toLowerCase())\n    ));\n\n    return (\n      <div className=\"App\">\n      <h1>Users Hub</h1>\n        <SearchBox placeholder='search users' handleChange={e => this.setState({ searchField: e.target.value })}/>\n        <CardList users={filteredUsers}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}